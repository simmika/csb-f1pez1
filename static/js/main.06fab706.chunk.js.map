{"version":3,"sources":["App.js","index.js"],"names":["EmptyMessage","class","role","CorrectGuessMessage","IncorrectGuessMessage","Img","guessesCount","alt","src","App","word","React","useState","guessLetter","setGuessLetter","repeat","length","guessWord","setGuessWord","setGuessesCount","guessSuccess","setGuessSuccess","className","Form","onSubmit","e","preventDefault","includes","gameWord","split","map","letter","x","i","join","c","Stack","direction","gap","Control","onChange","event","target","value","toLowerCase","replaceAll","type","placeholder","size","maxlength","Button","disabled","variant","style","marginTop","onClick","window","location","reload","rootElement","document","getElementById","createRoot","render"],"mappings":"qMAKMA,EACJ,qBAAKC,MAAM,sBAAsBC,KAAK,QAAO,SAAC,uCAK1CC,EACJ,qBAAKF,MAAM,sBAAsBC,KAAK,QAAO,SAAC,0BAK1CE,EACJ,qBAAKH,MAAM,qBAAqBC,KAAK,QAAO,SAAC,6BAKzCG,EAAM,SAAH,GAA0B,IAApBC,EAAY,EAAZA,aACb,OAAqB,IAAjBA,EACK,qBAAKC,IAAI,GAAGC,IAAI,uBACG,IAAjBF,EACF,qBAAKC,IAAI,GAAGC,IAAI,uBACG,IAAjBF,EACF,qBAAKC,IAAI,GAAGC,IAAI,uBACG,IAAjBF,EACF,qBAAKC,IAAI,GAAGC,IAAI,uBACG,IAAjBF,EACF,qBAAKC,IAAI,GAAGC,IAAI,uBACG,IAAjBF,EACF,qBAAKC,IAAI,GAAGC,IAAI,uBAEhB,qBAAKD,IAAI,GAAGC,IAAI,sBAE3B,EAEe,SAASC,IACtB,IAAMC,EAtCc,SAuCpB,EAAsCC,IAAMC,SAAS,IAAG,mBAAjDC,EAAW,KAAEC,EAAc,KAClC,EAAkCH,IAAMC,SAAS,IAAIG,OAAOL,EAAKM,SAAQ,mBAAlEC,EAAS,KAAEC,EAAY,KAC9B,EAAwCP,IAAMC,SAAS,GAAE,mBAAlDN,EAAY,KAAEa,EAAe,KACpC,EAAwCR,IAAMC,WAAU,mBAAjDQ,EAAY,KAAEC,EAAe,KA2BpC,OACE,sBAAKC,UAAU,MAAK,UAClB,cAACC,EAAA,EAAI,CAACC,SArBiB,SAACC,GAE1B,GADAA,EAAEC,iBACEhB,EAAKiB,SAASd,GAAc,CAC9B,IAAMe,EAAWlB,EACdmB,MAAM,IACNC,KAAI,SAACC,GAAM,OAAMA,IAAWlB,EAAc,IAAMkB,CAAM,IACzDb,EACEU,EACGE,KAAI,SAACE,EAAGC,GAAC,MAAuB,MAAjBhB,EAAUgB,GAAaD,EAAIf,EAAUgB,EAAE,IACtDC,KAAK,KAEVb,GAAgB,EAClB,MACEA,GAAgB,GAChBF,GAAgB,SAACgB,GAAC,OAAKA,EAAI,CAAC,IAE9BrB,EAAe,GACjB,EAIuC,SACjC,eAACsB,EAAA,EAAK,CAACC,UAAU,aAAaC,IAAK,EAAGhB,UAAU,mBAAkB,UAChE,cAACC,EAAA,EAAKgB,QAAO,CACXC,SA9BiB,SAACC,GAC1B3B,EACE2B,EAAMC,OAAOC,MAAMC,cAAcC,WAAW,cAAe,IAE/D,EA2BUC,KAAK,SACLC,YAAY,aACZC,KAAK,KACLC,UAAU,IACVN,MAAO9B,IAET,cAACqC,EAAA,EAAM,CACLC,UAAWtC,EACXuC,QAAQ,UACRN,KAAK,SACLE,KAAK,KAAI,SACV,gBAKL,eAACZ,EAAA,EAAK,CAACd,UAAU,mBAAmB+B,MAAO,CAAEC,UAAW,QAAS,UAC9DtD,EACgB,GAAhBoB,EAAuBjB,EAAsBC,KAEhD,cAACgC,EAAA,EAAK,UACJ,6BAAKnB,EAAUY,MAAM,IAAIC,KAAI,SAACE,GAAC,OAAKA,EAAI,GAAG,QAE7C,cAACI,EAAA,EAAK,UACJ,cAAC,EAAG,CAAC9B,aAAcA,MAErB,cAAC8B,EAAA,EAAK,UACJ,cAACc,EAAA,EAAM,CAACE,QAAQ,SAASG,QAAS,kBAAMC,OAAOC,SAASC,QAAO,EAAM,EAAC,SAAC,cAM/E,CC3GA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACtD,EAAG,M","file":"static/js/main.06fab706.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Form, Stack } from \"react-bootstrap\";\nimport \"./styles.css\";\n\nconst getWord = () => \"monkey\";\nconst EmptyMessage = (\n  <div class=\"alert alert-primary\" role=\"alert\">\n    Please enter your guess and submit\n  </div>\n);\n\nconst CorrectGuessMessage = (\n  <div class=\"alert alert-success\" role=\"alert\">\n    Your guess is correct\n  </div>\n);\n\nconst IncorrectGuessMessage = (\n  <div class=\"alert alert-danger\" role=\"alert\">\n    Your guess is incorrect.\n  </div>\n);\n\nconst Img = ({ guessesCount }) => {\n  if (guessesCount === 0) {\n    return <img alt=\"\" src=\"./img/hangman1.png\" />;\n  } else if (guessesCount === 1) {\n    return <img alt=\"\" src=\"./img/hangman2.png\" />;\n  } else if (guessesCount === 2) {\n    return <img alt=\"\" src=\"./img/hangman3.png\" />;\n  } else if (guessesCount === 3) {\n    return <img alt=\"\" src=\"./img/hangman4.png\" />;\n  } else if (guessesCount === 4) {\n    return <img alt=\"\" src=\"./img/hangman5.png\" />;\n  } else if (guessesCount === 5) {\n    return <img alt=\"\" src=\"./img/hangman6.png\" />;\n  } else {\n    return <img alt=\"\" src=\"./img/hangman7.png\" />;\n  }\n};\n\nexport default function App() {\n  const word = getWord();\n  const [guessLetter, setGuessLetter] = React.useState(\"\");\n  const [guessWord, setGuessWord] = React.useState(\"_\".repeat(word.length));\n  const [guessesCount, setGuessesCount] = React.useState(0);\n  const [guessSuccess, setGuessSuccess] = React.useState();\n\n  const handleLetterChange = (event) => {\n    setGuessLetter(\n      event.target.value.toLowerCase().replaceAll(/[^a-zA-Z]+/g, \"\")\n    );\n  };\n\n  const handleLetterSubmit = (e) => {\n    e.preventDefault();\n    if (word.includes(guessLetter)) {\n      const gameWord = word\n        .split(\"\")\n        .map((letter) => (letter !== guessLetter ? \"_\" : letter));\n      setGuessWord(\n        gameWord\n          .map((x, i) => (guessWord[i] === \"_\" ? x : guessWord[i]))\n          .join(\"\")\n      );\n      setGuessSuccess(true);\n    } else {\n      setGuessSuccess(false);\n      setGuessesCount((c) => c + 1);\n    }\n    setGuessLetter(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Form onSubmit={handleLetterSubmit}>\n        <Stack direction=\"horizontal\" gap={3} className=\"col-md-8 mx-auto\">\n          <Form.Control\n            onChange={handleLetterChange}\n            type=\"letter\"\n            placeholder=\"Your guess\"\n            size=\"lg\"\n            maxlength=\"1\"\n            value={guessLetter}\n          />\n          <Button\n            disabled={!guessLetter}\n            variant=\"primary\"\n            type=\"submit\"\n            size=\"lg\"\n          >\n            Submit\n          </Button>\n        </Stack>\n      </Form>\n      <Stack className=\"col-md-8 mx-auto\" style={{ marginTop: \"1rem\" }}>\n        {EmptyMessage}\n        {guessSuccess == true ? CorrectGuessMessage : IncorrectGuessMessage}\n      </Stack>\n      <Stack>\n        <h2>{guessWord.split(\"\").map((x) => x + \" \")}</h2>\n      </Stack>\n      <Stack>\n        <Img guessesCount={guessesCount} />\n      </Stack>\n      <Stack>\n        <Button variant=\"danger\" onClick={() => window.location.reload(false)}>\n          RESET\n        </Button>\n      </Stack>\n    </div>\n  );\n}\n// Kad zodzius trauktu is zodyno\n// messages (aditional)\n// + count'as\n// + submito disablinimas (jei tuscias)\n// + o visokito neleidziam ivest: lowerCase, daugiau raidziu ,skaicius  ir pan.\n// + rast paveikslelius 6\n// + reset button'a implementuoti - pvz refresh'a browserio\n// kai pralaimim tai kazkas turi ivykti\n// ir kai laimi kazkas ivyksta\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}